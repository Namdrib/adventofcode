#ip 4			
addi 4 16 4		pc += 16						GOTO LABEL 4
seti 1 2 3		r[3] = 1						LABEL 1
seti 1 6 1		r[1] = 1						LABEL 2
mulr 3 1 2		r[2] = r[1] * r[3]				LABEL 3
eqrr 2 5 2		r[2] = (r[2] == r[5])			
addr 2 4 4		pc += r[2]						if (r1 * r3 == r5)
addi 4 1 4		pc++								r0 += r3 // since r3 is growing, these are factors of r5?
addr 3 0 0		r[0] += r[3]					
addi 1 1 1		r[1]++							r1++
gtrr 1 5 2		r[2] = (r[1] > r[5])			
addr 4 2 4		pc += r[2]						if (r1 > r5) r3++
seti 2 8 4		pc = 2							else GOTO LABEL 3
addi 3 1 3		r[3]++						
gtrr 3 5 2		r[2] = (r[3] > r[5])			if (r3 > r5)
addr 2 4 4		pc += r[2]							pc++
seti 1 4 4		pc = 1							GOTO LABEL 2
mulr 4 4 4		pc *= pc						program end?
addi 5 2 5		r[5] += 2						LABEL 4
mulr 5 5 5		r[5] *= r[5]					
mulr 4 5 5		r[5] *= pc						r5: 4 * 19 * 11 // 836
muli 5 11 5		r[5] *= 11						
addi 2 5 2		r[2] += 5						r2 += 5 *= 22 + 18
mulr 2 4 2		r[2] *= pc						
addi 2 18 2		r[2] += 18						
addr 5 2 5		r[5] += r[2]					r5 += r2
addr 4 0 4		pc += r[0]						
seti 0 6 4		pc = 1							GOTO LABEL 2
setr 4 8 2		r[2] = pc						r2 = 27 * 28 + 29 * 30 * 14 * 32 // 10,550,400
mulr 2 4 2		r[2] *= pc						
addr 4 2 2		r[2] += pc						
mulr 4 2 2		r[2] *= pc						
muli 2 14 2		r[2] *= 14						
mulr 2 4 2		r[2] *= pc						
addr 5 2 5		r[5] += r[2]					r5 += r2
seti 0 1 0		r[0] = 0						reset debug bit
seti 0 5 4		pc = 0							GOTO LABEL 1

GOTOs take into account the final pc++

r0 = both debug bit and output
r1 = inner loop
r2 = work var?
r3 = outer loop
r4 = pc
r5 = loop limit?

set r5 = 836
set r2 = 128
set r5 = 964

r5 += huge value?

for (r3 = 1; r3 <= r5; r3++) {
	for (r1 = 1; r1 <= r5; r1++) {
		if (r1 * r3 == r5) {
			r0 += r3
			break; // because it won't happen again
		}
	}
}
end